name: Jira â†’ CodeX Generate Tests

on:
  repository_dispatch:
    types: [codex_generate_tests]
  workflow_dispatch:
    inputs:
      jira_key:
        description: "SCRUM-1"
        required: true
      mode:
        description: "repo | jira | both"
        required: false
        default: "both"

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      # Prefer Secrets for sensitive values
      JIRA_BASE: ${{ vars.JIRA_BASE }}
      JIRA_EMAIL: ${{ vars.JIRA_EMAIL }}
      JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
      CODEX_BASE: ${{ vars.CODEX_BASE }}
      CODEX_API_KEY: ${{ secrets.CODEX_API_KEY }}

      # Customize for your Jira instance
      AC_FIELD: customfield_10059
      TEST_ISSUETYPE_NAME: Test
      LINK_TYPE_NAME: Tests

    steps:
      - uses: actions/checkout@v4

      - name: Resolve inputs
        id: meta
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            JIRA_KEY="${{ github.event.client_payload.jira_key }}"
            MODE="${{ github.event.client_payload.mode }}"
            [ -z "$MODE" ] && MODE="repo"
          else
            JIRA_KEY="${{ github.event.inputs.jira_key }}"
            MODE="${{ github.event.inputs.mode }}"
          fi
          echo "JIRA_KEY=$JIRA_KEY" >> "$GITHUB_OUTPUT"
          echo "MODE=$MODE" >> "$GITHUB_OUTPUT"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install requests pyyaml

      - name: Generate tests (via CodeX, fallback local)
        run: |
          # Set the correct path to your script if different:
          # e.g., python .github/scripts/codex_jira_test_gen.py ...
          python codex_jira_test_gen.py \
            --jira-key "${{ steps.meta.outputs.JIRA_KEY }}" \
            --mode "${{ steps.meta.outputs.MODE }}"

      - name: Create branch & PR (repo or both)
        if: ${{ steps.meta.outputs.MODE == 'repo' || steps.meta.outputs.MODE == 'both' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          # Skip if nothing was generated
          if [ ! -d tests/generated ]; then
            echo "No generated files found under tests/generated; skipping PR."
            exit 0
          fi

          BR="tests/${{ steps.meta.outputs.JIRA_KEY }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BR"
          git add tests/generated/
          # Avoid failing if there are no changes
          git diff --cached --quiet && { echo "No changes to commit"; exit 0; }
          git commit -m "chore(tests): autogen for ${{ steps.meta.outputs.JIRA_KEY }}"
          git push origin "$BR" || true

          # Determine default branch dynamically
          BASE_BRANCH="$(gh api repos/${{ github.repository }} -q .default_branch)"
          echo "Default branch: $BASE_BRANCH"

          # Create PR if one doesn't already exist
          if gh pr view "$BR" >/dev/null 2>&1; then
            echo "PR already exists for $BR; nothing to do."
          else
            gh pr create \
              --title "Auto tests for ${{ steps.meta.outputs.JIRA_KEY }}" \
              --body "Generated by CodeX." \
              --head "$BR" \
              --base "$BASE_BRANCH"
          fi
